#!/usr/bin/env ruby

require 'fernet'
require 'optparse'
require 'highline/import'

options = {}
op = OptionParser.new do |opts|
  opts.banner = "Usage: fernet-encrypt [-p | -k <keyfile>] -i <plaintext> -o <ciphertext>"

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
  opts.on("-p", "--prompt", "Prompt for keys") do |prompt|
    options[:prompt] = prompt
  end
  opts.on("-k", "--keyfile KEYFILE") do |keyfile|
    options[:keyfile] = keyfile
  end
  opts.on("-i", "--infile PLAINFILE") do |plainfile|
    options[:plainfile] = plainfile
  end
  opts.on("-o", "--outfile CIPHERFILE") do |cipherfile|
    options[:cipherfile] = cipherfile
  end
end
op.parse!

if ENV["FERNET_CLI_KEY"].nil?
  if options[:prompt]
    key = ask("Enter Key: ") {|q| q.echo = false}
  elsif options[:keyfile]
    key = File.read(options[:keyfile]).chomp
  end
else
  key=ENV["FERNET_CLI_KEY"]
end

if key.nil?
  $stderr.puts "i have no key"
  $stderr.puts op.banner, op.summarize
  exit(1)
end

if options[:plainfile].nil? or (! File.readable?(options[:plainfile]))
  $stderr.puts "can't read plaintext file"
  $stderr.puts op.banner, op.summarize
  exit(1)
end

File.open(options[:cipherfile], "w+") do |f|
  f.write(Fernet.generate(key.chomp, File.read(options[:plainfile])))
end
